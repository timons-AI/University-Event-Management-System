generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  LEADER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?   @db.Text
  role          UserRole  @default(STUDENT)
  accounts      Account[]
  events        Event[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum EventStatus {
  DRAFT
  PUBLISHED
  APPROVED
  ARCHIVED
  REJECTED
}

model Event {
  id          String      @id @default(cuid())
  name        String
  description String?
  date        DateTime?
  status      EventStatus @default(DRAFT)
  image       String?
  price       Float?
  venueId     String?     @map("venue_id")
  userId      String      @map("user_id")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  venue       Venue?      @relation(fields: [venueId], references: [id])

  @@map("events")
}

model Venue {
  id      String  @id @default(cuid())
  name    String
  address String
  city    String
  events  Event[]

  @@map("venues")
}
